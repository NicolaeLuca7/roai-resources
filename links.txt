
- https://huggingface.co/learn/computer-vision-course/unit0/welcome/welcome
- https://huggingface.co/learn/diffusion-course/unit0/1
- https://huggingface.co/docs




- [Linear algebra 3Blue1Brown](https://www.youtube.com/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab)
- [Essence of calculus 3Blue1Brown](https://www.youtube.com/watch?v=WUvTyaaNkzM&list=PLZHQObOWTQDMsr9K-rj53DwVRMYO3t5Yr)
Avansat:
- [Intro to calculus](https://calculusmadeeasy.org/)
- [Concepte ceva mai avansate de mate pentru ml](https://mml-book.github.io/book/mml-book.pdf)

- [Intro Colab](https://colab.research.google.com/drive/1MFJSiUNrm83P2oM4JdVjsI7X198uApM5?usp=sharing)
- [Prea mult Python](https://colab.research.google.com/drive/13HW52Wset7S2Qg0keKfazTQUvQcF7vOQ?usp=sharing)
- Nitro NLP  [Python](https://youtu.be/pqvlZ7cTQ0o?si=2NFklc_8wssLaRUX)
- Lecțiile pyML, [partea I](https://www.pyml.ro/machine-learning-lectii-online-in-python.php)
- [Notebook](https://colab.research.google.com/github/Nyandwi/machine_learning_complete/blob/main/0_python_for_ml/intro_to_python.ipynb) (cu extra resurse la final) de la ioai-official

Informațiile se vor suprapune, așadar nu vă fie teamă să săriți peste ce știți deja

https://www.kaggle.com/learn

- Nitro NLP [Machine Learning](https://youtu.be/V3cfWPzfkqo?si=1WEQ2Ok80XN9wVLH)
- Lecțiile pyML, [partea II](https://www.pyml.ro/machine-learning-lectii-online-in-python.php)
- [Stanford CS229, lectures 1-5](https://www.youtube.com/watch?v=jGwO_UgTS7I&list=PLoROMvodv4rMiGQp3WXShtMGgzqpfVfbU&ab_channel=StanfordOnline)

Avansat:
- [Deep Learning](https://www.deeplearningbook.org/)
Avansat:
- [Deep Learning](https://www.deeplearningbook.org/)

- [Deep learning cu exemple, cod, explicatii](http://neuralnetworksanddeeplearning.com/index.html)
- [Deep learning 3Blue1Brown](https://www.youtube.com/watch?v=aircAruvnKk&list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi)


https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html

https://www.pyml.ro/machine-learning-lectii-online-in-python.ph


https://karpathy.github.io/2019/04/25/recipe/

import random


def reset_numpy_seed(seed_value=42):
  try:
    # Set NumPy random seed
    import numpy as np
    np.random.seed(seed_value)
    print(f'NumPy random seed set with value: {seed_value}')
  except Exception as e:
    print(f'NumPy random seed was not set: {e}')
  return


def reset_tensorflow_seed(seed_value=42):
  try:
    # Set TensorFlow random seed
    import tensorflow as tf
    success = False
    # Here we have 2 different ways to set the seed
    # depending on the version of TensorFlow
    try:
      tf.random.set_seed(seed_value)
      success = True
    except Exception as e:
      pass
    try:
      tf.set_random_seed(seed_value)
      success = True
    except Exception as e:
      pass
    if success:
      print(f'TensorFlow random seed set with value: {seed_value}')
    else:
      print(f'TensorFlow random seed was not set')
  except Exception as e:
    print(f'TensorFlow random seed was not set: {e}')
  return


def reset_torch_seed(seed_value=42):
  try:
    # Set PyTorch random seed
    import torch
    torch.manual_seed(seed_value)
    if torch.cuda.is_available():
      torch.cuda.manual_seed(seed_value)
      torch.cuda.manual_seed_all(seed_value)  # if you are using multiple GPUs
    print(f'PyTorch random seed set with value: {seed_value}')
  except Exception as e:
    print(f'PyTorch random seed was not set: {e}')
  return


def set_random_seeds(seed_value=42):
  # Set Python random seed
  random.seed(seed_value)
  reset_numpy_seed(seed_value)
  reset_tensorflow_seed(seed_value)
  reset_torch_seed(seed_value)
  return


if __name__ == '__main__':
  # Set the desired seed value
  seed = 42

  # Set random seeds
  set_random_seeds(seed)